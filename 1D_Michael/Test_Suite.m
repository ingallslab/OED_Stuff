numFits = 100;
numExp = 20;
numTrials = 200;
datasrc = 'SSA';    %SSA, Normal
opt = 'D_Optimal';  %Ds_Optimal, D_Optimal, LinSpace

%   SSA_Linspace and Norm_Linspace_LNA are datasets generated respectively
%   from normally distributed data and from data generated by an SSA
%   directly. Each defaults to the LinSpace optimality setting, which is by
%   default semi-linearly spaced (though the density of experiments is
%   twice as large in the bistable region, simply due to how the SSA data
%   was generated). We compare this to the Ds-Optimal and D-Optimally
%   distributed data, which is generated based off of an OED procedure.

Omega = 90;

u = [ linspace(0,0.1,32) linspace(0.1,0.2,64) linspace(0.2,0.3,32)];
inc = length(u)/numExp;
if inc<1
    disp('Too many experiments!');
    return
end 
u = u(1:round(inc):end);  

covar=inv(sum(FIM_comp([0.5,3,9,3,-18,117],Omega,u,[0.1,0.2]),3));
disp(covar(1:4,1:4));
% 
%optionsA = struct('DataSource','SSA','SystemSize',Omega,'Optimality','LinSpace'); 
%[nanA,fitsA] = generateFits(numFits,numExp,numTrials,optionsA);
% dlmwrite(strcat('./1D_Michael/Data/200x20__SSA_LinSpace_90.txt'),fitsA,'\t');
% dlmwrite('./1D_Michael/Data/200x20__SSA_LinSpace_90_nans.txt',nanA,'\t');
% 
% optionsB = struct('DataSource','SSA','SystemSize',Omega,'Optimality','Ds_Optimal'); 
% [nanB,fitsB] = generateFits(numFits,numExp,numTrials,optionsB);
% dlmwrite('./1D_Michael/Data/200x20__SSA_Ds_90.txt',fitsB,'\t');
% dlmwrite('./1D_Michael/Data/200x20__SSA_Ds_90_nans.txt',nanB,'\t');
% 
% optionsC = struct('DataSource','SSA','SystemSize',Omega,'Optimality','D_Optimal'); 
% [nanC,fitsC] = generateFits(numFits,numExp,numTrials,optionsC);
% dlmwrite('./1D_Michael/Data/200x20__SSA_D_90.txt',fitsC,'\t');
% dlmwrite('./1D_Michael/Data/200x20__SSA_D_90_nans.txt',nanC,'\t');
% 
% optionsA2 = struct('DataSource','Normal','SystemSize',Omega,'Optimality','LinSpace'); 
% [nanA2,fitsA2] = generateFits(numFits,numExp,numTrials,optionsA2);
% dlmwrite('./1D_Michael/Data/200x20__Normal_LinSpace_90.txt',fitsA2,'\t');
% dlmwrite('./1D_Michael/Data/200x20__Normal_LinSpace_90_nans.txt',nanA2,'\t');
% 
% optionsB2 = struct('DataSource','Normal','SystemSize',Omega,'Optimality','Ds_Optimal'); 
% [nanB2,fitsB2] = generateFits(numFits,numExp,numTrials,optionsB2);
% dlmwrite('./1D_Michael/Data/200x20__Normal_Ds_90.txt',fitsB2,'\t');
% dlmwrite('./1D_Michael/Data/200x20__Normal_Ds_90nans.txt',nanB2,'\t');

% optionsC2 = struct('DataSource','Normal','SystemSize',Omega,'Optimality','D_Optimal'); 
% [nanC2,fitsC2] = generateFits(numFits,numExp,numTrials,optionsC2);
% dlmwrite('./1D_Michael/Data/200x20__Normal_D_90.txt',fitsC2,'\t');
% dlmwrite('./1D_Michael/Data/200x20__Normal_D_90_nans.txt',nanC2,'\t');


% std_a0 = std(fits(:,1));
% std_a = std(fits(:,2));
% std_K = std(fits(:,3));
% std_n = std(fits(:,4));
% a_a0 = mean(fits(:,1));
% a_a = mean(fits(:,2));
% a_K = mean(fits(:,3));
% a_n = mean(fits(:,4));
% 
% 
% disp('Covariance Matrix');
% disp(cov(fits));
% disp(strcat("Variance in a0: ",num2str((std_a0)^2)));
% disp(strcat("Variance in a: ",num2str((std_a)^2)));
% disp(strcat("Variance in K: ",num2str((std_K)^2)));
% disp(strcat("Variance in n: ",num2str((std_n)^2)));
% 
% disp(strcat("Mean a0: ",num2str(a_a0)));
% disp(strcat("Mean a: ",num2str(a_a)));
% disp(strcat("Mean K: ",num2str(a_K)));
% disp(strcat("Mean n: ",num2str(a_n)));